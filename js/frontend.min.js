document.addEventListener('DOMContentLoaded',function(){PostViewsCounter={init:function(args){if(args.mode==='rest_api'){let options={id:args.postID};let headers={'Content-Type':'application/x-www-form-urlencoded; charset=utf-8','X-WP-Nonce':args.nonce};this.request(args.requestURL+'?id='+args.postID,options,'POST',headers)}else{let options={action:'pvc-check-post',pvc_nonce:args.nonce,id:args.postID};let headers={'Content-Type':'application/x-www-form-urlencoded; charset=utf-8'};this.request(args.requestURL,options,'POST',headers)}},request:function(url,params,method,headers){let options={method:method,mode:'cors',cache:'no-cache',credentials:'same-origin',headers:headers,body:this.prepareData(params)};const _this=this;return fetch(url,options).then(function(response){if(!response.ok)
throw Error(response.statusText);return response.json()}).then(function(response){try{if(typeof response==='object'&&response!==null)
_this.triggerEvent('pvcCheckPost',response)}catch(error){console.log('Invalid JSON data');console.log(error)}}).catch(function(error){console.log('Invalid response');console.log(error)})},prepareData:function(data){return Object.keys(data).map(function(el){return encodeURIComponent(el)+'='+encodeURIComponent(data[el])}).join('&').replace(/%20/g,'+')},triggerEvent:function(eventName,data){const newEvent=new CustomEvent(eventName,{bubbles:!0,detail:data});document.dispatchEvent(newEvent)}}
PostViewsCounter.init(pvcArgsFrontend)})